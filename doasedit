#!/usr/bin/env sh

# doasedit
# Link:         git.io/doasedit

# Dependencies: opendoas <https://github.com/Duncaen/OpenDoas> or doas <https://cvsweb.openbsd.org/src/usr.bin/doas/>

# Author:       Stanislav <git.io/monesonn>
# Description:  doas equivalent to sudoedit
# Licence:      ISC
# Contribution: If you have some ideas, how to improve this script, feel free to make pull request or write an issue

# Tips:         Use this script with enabled persistence in doas.conf file, like:
#
#                   `permit persist :wheel`
#
#               Also make sure that your doas.conf is owned by root with read-only permissions, like:
#
#                   # chown -c root:root /path/to/doas.conf && chmod 0400 path/to/doas.conf
#

# Be sure /tmp as tmp directory by setting TMPDIR env
export TMPDIR=/tmp

# Catch arguments.
if [ -n "${2}" ]; then
    error "expected only one argument"
elif [ -z "${1}" ]; then
    error "no file path provided"
elif [ "$(id -u)" -eq 0 ]; then
    error "cannot be run as root"
elif [ -d "${1}" ]; then
    error "${1} is a directory"
fi

# Safe shell options
set -eu

# Throw information message
msg() {
    printf "%s\n" "$(basename ${0}): ${1}"
}

# Throw error message
error() {
    printf "%s\n" "$(basename ${0}): ${1}" >&2
    exit 1
}

# Reset doas password promt. If you want, feel free to comment this
case "$(uname -s | tr '[:upper:]' '[:lower:]')" in
    linux) doas -L ;;
esac

# Absolute path to the source file (file for editing)
src="$(doas readlink -f "${1}")"

# Filename for the source file
filename="${src##*/}"

# If filename have extension then also use it for a temporary file
# It's kinda useful for editors, that have plugins or something else for certain file extensions
[ "$filename" = "${filename##*.}" ] && file_extension="" || file_extension=".${filename##*.}"

# Create a temporary directory
tmp_d=$(mktemp -d)

# Hooks for recursive removing of a temporary directory
trap 'rm -rf ${tmp_d}' EXIT HUP QUIT TERM INT ABRT

# Randomize suffix for temporary files
suffix=$(xxd -l4 -ps /dev/urandom)

# Create a temporary file for the source file in a temporary directory
tmp_f="${tmp_d}/${filename}${suffix}${file_extension}"

# File writeability condition
if [ -w "$src" ]; then
    error "$filename: editing files in a writable directory is not permitted"
fi

# Other conditions: if file exist, readable, et cetera
if [ -f "${src}" ] && [ ! -r "${src}" ]; then
    doas cat "${src}" > "${tmp_f}" || error "the file is not readable"
elif [ -r "${src}" ]; then
    cat "${src}" > "${tmp_f}" || error "cannot transfer to content of the file to temporary one"
elif [ ! -f "${src}" ]; then
    # Grant .rw-r--r-- permission for newly created files by default owned by root
    :> "${tmp_f}" && doas chmod -R 0644 "${tmp_f}" || error "cannot create new file"
else
    error "unexpected script behaviour"
fi

# Create copy of the temporary file
tmp_cf="${tmp_d}/${filename}${suffix}.copy"

# Move the contents of a temporary file to its copy for later comparison
cat "${tmp_f}" > "${tmp_cf}"

# Editing the file by the user using the default editor, if not specified, the vi is used
${EDITOR:-vi} "${tmp_f}"

# Compare the temporary file and the temporary copy
if cmp -s "${tmp_f}" "${tmp_cf}"; then
    msg "${filename} unchanged"
    exit 0
else
    # Replace the source file with temporary, repeats three times if it fails
    attempt=0
    until doas cp -f "${tmp_f}" "${src}"; do
        attempt=$((attempt + 1))
        [ "${attempt}" -ge 3 ] && error "cannot accept changes"
    done
    msg "${filename} changes are accepted"
    exit 0
fi

