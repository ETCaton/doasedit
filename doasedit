#!/usr/bin/env sh

# doasedit

# Author:       Stanislav <git.io/monesonn>
# Link:         git.io/doasedit
# Description:  doasedit is shell script, like sudoedit, but for doas.
# Licence:      ISC
# Contribution: If you have some ideas, how to improve this script, feel free to make pull request or write an issue.

# Catch arguments.
if [ ! -z ${2} ]; then
    printf "%s\n" "doasedit: expected only one argument" >&2
    exit 1
elif [ -z ${1} ]; then
    printf "%s\n" "doasedit: no file path provided" >&2
    exit 1
elif [ "$EUID" -eq 0 ]; then
    printf "%s\n" "doasedit: cannot be run as root" >&2
    exit 1
fi

# Safe shell options.
set -Eeuo pipefail
IFS=$'\n\t'

# Reset doas password promt. If you want, feel free to comment this line.
doas -L

# Absolute path to the source file (file for editing).
src="$(doas realpath $1)"

# Filename for source file.
filename="${src##*/}"

# If filename have suffix then also use it for temporary file.
# It's kinda useful for editors, that have plugins or something else for certain file extensions.
[ "$filename" == "${filename##*.}" ] && filename_ext="" || filename_ext=".${filename##*.}"

# Use /dev/shm/ as tmp directory by setting TMPDIR env.
export TMPDIR=/dev/shm/

# Create temporary file for source file.
tempfile=$(mktemp --suffix "$filename_ext")

# File writeability condition.
if [ -w "$src" ]; then
    printf "%s\n" "doasedit: $filename: editing files in a writable directory is not permitted"
    exit 1
fi

# Other conditions: if file exist, readable, etc.
if [ -f "$src" ] && [ ! -r "$src" ]; then
    doas cat $src > $tempfile || exit 1
elif [ -r "$src" ]; then
    cat $src > $tempfile || exit 1
elif [ ! -f "$src" ]; then
    # Grant .rw-r--r-- permission for newly created files by default owned by root.
    doas chmod -R 644 $tempfile
else
    exit 1
fi

# Create copy of tempfile.
tempcopy=$(mktemp --suffix "$filename_ext")

# Hooks for removing temp files.
trap "rm -f $tempcopy $tempfile" EXIT HUP QUIT TERM INT ABRT

# Move the contents of a temporary file to its copy for later comparison.
cat "$tempfile" > "$tempcopy"

# Editing the file by the user using the default editor, if not specified, the vi is used.
${EDITOR:-vi} "$tempfile"

# Compare tempfile and tempcopy.
if cmp -s "$tempfile" "$tempcopy"; then
    printf "%s\n" "doasedit: $filename unchanged"
    exit 0
else
    doas cp -f "$tempfile" "$src"
    printf "%s\n" "doasedit: $filename changes are accepted"
    exit 0
fi

